<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>supernum</title>
    <link>//www.supernum.tech/en/</link>
    <description>Recent content on supernum</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>copyrights belong to ©supernum.</copyright>
    <lastBuildDate>Tue, 01 Jan 2019 09:10:27 +0600</lastBuildDate>
    
	<atom:link href="//www.supernum.tech/en/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Primary Edition</title>
      <link>//www.supernum.tech/en/showcase/supernumv1/</link>
      <pubDate>Tue, 01 Jan 2019 11:02:05 +0600</pubDate>
      
      <guid>//www.supernum.tech/en/showcase/supernumv1/</guid>
      <description>The Framework When the user opens the report platform, he will see title bar  above, navigation bar  on the left and content display area  on the right. Under mobile devices, the navigation bar on the left side may be hidden automatically. Users need to click on of the title bar to expand the navigation bar  to expand it.
   Report Management The navigation bar will use report category  as the primary heading and report name  as the secondary heading.</description>
    </item>
    
    <item>
      <title>Report Management</title>
      <link>//www.supernum.tech/en/maintenance/reportmanager/</link>
      <pubDate>Tue, 01 Jan 2019 11:02:05 +0600</pubDate>
      
      <guid>//www.supernum.tech/en/maintenance/reportmanager/</guid>
      <description>By default, our report management system manages reports according to ___reportTable__ . You can refer to the following SQL statements to establish the __reportTable__, of course, you need to modify some content to for your database, such as the way to query the current time in SQLite is DATETIME(&#39;now&#39;, &#39;localtime&#39;), in SQL Server is GETDATE() .
  CREATE __reportTable__     1
2
3
4
5
6</description>
    </item>
    
    <item>
      <title>VM Configurate</title>
      <link>//www.supernum.tech/en/installation/virtualsystem/</link>
      <pubDate>Tue, 01 Jan 2019 11:02:05 +0600</pubDate>
      
      <guid>//www.supernum.tech/en/installation/virtualsystem/</guid>
      <description>First of all, you need to download the corresponding VirtualBox installer  and VirtualBox extension package  in virtualbox official website for your operating system. Extension packages allow your virtual machine to share pasteboards, folders and other functions with the local machine. If you do not need these functions, you don&amp;rsquo;t need to download the extension packages.
   
Secondly, you need to install VirtualBox installer just like normal software, open VirtualBox software after installation, and drag VirtualBox extension package into the VirtualBox interface to install the extension.</description>
    </item>
    
    <item>
      <title>Membership Edition</title>
      <link>//www.supernum.tech/en/showcase/supernumv2/</link>
      <pubDate>Tue, 01 Jan 2019 11:02:05 +0600</pubDate>
      
      <guid>//www.supernum.tech/en/showcase/supernumv2/</guid>
      <description>The Framework When the user opens the report platform, he will see title bar  above, navigation bar  on the left and content display area  on the right. Under mobile devices, the navigation bar on the left side may be hidden automatically. Users need to click on of the title bar to expand the navigation bar  to expand it.
   User Management The upper half of the navigation bar is User Management Interface .</description>
    </item>
    
    <item>
      <title>User Management</title>
      <link>//www.supernum.tech/en/maintenance/usermanager/</link>
      <pubDate>Tue, 01 Jan 2019 11:02:05 +0600</pubDate>
      
      <guid>//www.supernum.tech/en/maintenance/usermanager/</guid>
      <description>By default, our user management system manages users according to the __userTable__. You can refer to the following SQL statements to establish the __userTable__.
  CREATE     1
2
3
4
5
6
7
8
9
  CREATE TABLE IF NOT EXISTS __userTable__ ( userName TEXT UNIQUE NOT NULL, department TEXT, password VARCHAR(40, 40) NOT NULL, registerTime DATETIME DEFAULT (DATETIME(&amp;#39;now&amp;#39;, &amp;#39;localtime&amp;#39;)) NOT NULL, lastActiveTime DATETIME DEFAULT (DATETIME(&amp;#39;now&amp;#39;, &amp;#39;localtime&amp;#39;)) NOT NULL, loginTryTime INT DEFAULT 0 NOT NULL, permission INT DEFAULT 0 NOT NULL );      In the _\userTable__, you need to create at least the following columns, userName, password, registerTime, lastActiveTime, loginTryTime, permission, other cloumns can be created or deleted according to your needs.</description>
    </item>
    
    <item>
      <title>DB Configurate</title>
      <link>//www.supernum.tech/en/installation/database/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>//www.supernum.tech/en/installation/database/</guid>
      <description>Configuring different types of database connections requires slightly different steps.
For SQLite, you only need to provide the path of the database file of the SQLite. Of course, you can skip this configuration by using our default SQLLite database file.
For MySQL, SQL Server, and other databases, you need to provide the user name and password necessary to connect to the database, as well as the database name to connect to.</description>
    </item>
    
    <item>
      <title>Authentication Management</title>
      <link>//www.supernum.tech/en/maintenance/authmanager/</link>
      <pubDate>Tue, 01 Jan 2019 11:02:05 +0600</pubDate>
      
      <guid>//www.supernum.tech/en/maintenance/authmanager/</guid>
      <description>By default, our Authentication management system manages the user&amp;rsquo;s permission to read reports according to the __authTable__  table. You can refer to the following SQL statements to establish the __authTable__
  CREATE __authTable__      1
2
3
4
5
6
7
8
  CREATE TABLE IF NOT EXISTS __authTable__ ( reportName TEXT NOT NULL, authGiver TEXT, reportUser TEXT NOT NULL, colSub TEXT DEFAULT &amp;#34;*&amp;#34; NOT NULL, rowSub TEXT DEFAULT NULL, authClaim TEXT );      In the __authTable__, you need to create at least the following columns, reportName, reportUser, colSub, rowSub, other cloumns can be created or deleted according to your needs.</description>
    </item>
    
    <item>
      <title>Custom Edition</title>
      <link>//www.supernum.tech/en/showcase/supernumv3/</link>
      <pubDate>Tue, 01 Jan 2019 11:02:05 +0600</pubDate>
      
      <guid>//www.supernum.tech/en/showcase/supernumv3/</guid>
      <description>The Framework When the user opens the report platform, he will see title bar  above, navigation bar  on the left and content display area  on the right. Under mobile devices, the navigation bar on the left side may be hidden automatically. Users need to click on of the title bar to expand the navigation bar  to expand it.
   User Management The upper half of the navigation bar is User Management Interface .</description>
    </item>
    
    <item>
      <title>global Config</title>
      <link>//www.supernum.tech/en/installation/globalconfig/</link>
      <pubDate>Tue, 01 Jan 2019 11:02:05 +0600</pubDate>
      
      <guid>//www.supernum.tech/en/installation/globalconfig/</guid>
      <description>The report platform must rely on the global configuration fileconfig.Rto run normally. The default global configuration file is in a subfolder of/supernum. You can modify some of them to suit your needs.
The content of the global configuration file is roughly as follows. The global configuration file will be different for different editions or products with different systems.
  Setting global configuration variables     1
2</description>
    </item>
    
    <item>
      <title>Available Reports</title>
      <link>//www.supernum.tech/en/maintenance/availablereports/</link>
      <pubDate>Tue, 01 Jan 2019 11:02:05 +0600</pubDate>
      
      <guid>//www.supernum.tech/en/maintenance/availablereports/</guid>
      <description>The first report that the report platform displays by default is a list of reports that users can view. For different versions of products, the way to achieve this function is slightly different.
Primary Edition For the Primary Edition, you just need to create a __availableReports__  view, and insert the location, name, category and other information of the view as the first data into the __reportTable__  table. You can refer to the following SQL statements to create the __availableReports__ view.</description>
    </item>
    
    <item>
      <title>Visualization Management</title>
      <link>//www.supernum.tech/en/maintenance/plotmanager/</link>
      <pubDate>Tue, 01 Jan 2019 11:02:05 +0600</pubDate>
      
      <guid>//www.supernum.tech/en/maintenance/plotmanager/</guid>
      <description>Visualization Management  is present reports visually, essentially, so you don&amp;rsquo;t need to create additional system management tables, you just need to modify the existing system management tables slightly.。
Firstly，you need to modify __reportTable__ ， add a plotCommand  cloumn.
  modify __reportTable__     1
2
  ALTER TABLE __reportTable__ ADD COLUMN plotCommand TEXT;      secondly，you need to modify __authTable__， add a plotCommand  column.</description>
    </item>
    
    <item>
      <title>Reading History Management</title>
      <link>//www.supernum.tech/en/maintenance/readinghistorymanager/</link>
      <pubDate>Tue, 01 Jan 2019 11:02:05 +0600</pubDate>
      
      <guid>//www.supernum.tech/en/maintenance/readinghistorymanager/</guid>
      <description>By default, our user management system manages reading records according to the __readingHistoryTable__ . You can refer to the following SQL statement to create ** __readingHistoryTable__**.
  CREATE __readingHistoryTable__     1
2
3
4
5
6
  CREATE TABLE IF NOT EXISTS __readingHistoryTable__ ( reportName TEXT NOT NULL, username TEXT NOT NULL, lastReadingTime DATETIME DEFAULT (DATETIME(&amp;#39;now&amp;#39;, &amp;#39;localtime&amp;#39;)) NOT NULL, readingCount INT DEFAULT 1 NOT NULL );      In ** __readingHistoryTable__**, you need to create at least the following columns: reportName, username, lastReadingTime, readingCount, other columns can be created or deleted according to actual needs.</description>
    </item>
    
    <item>
      <title>Message Management</title>
      <link>//www.supernum.tech/en/maintenance/messagesmanager/</link>
      <pubDate>Tue, 01 Jan 2019 11:02:05 +0600</pubDate>
      
      <guid>//www.supernum.tech/en/maintenance/messagesmanager/</guid>
      <description>By default, our user management system manages reports according to the __messagesTable__  table. You can refer to the following SQL statement to establish __ messagesTable__ table.
  CREATE __messagesTable__     1
2
3
4
5
6
7
  CREATE TABLE IF NOT EXISTS __messagesTable__ ( sender TEXT NOT NULL, receiver TEXT NOT NULL, validTime DATETIME DEFAULT (DATETIME(&amp;#39;now&amp;#39;, &amp;#39;localtime&amp;#39;)) NOT NULL, expireTime DATETIME DEFAULT (DATETIME(&amp;#39;now&amp;#39;, &amp;#39;localtime&amp;#39;, &amp;#39;&amp;#43;90 day&amp;#39;)), content TEXT NOT NULL );      In the __ messagesTable__ , you need to create at least the following cloumns: sender, receiver, validTime, expireTime, content, other cloumns can be created or deleted according to your needs.</description>
    </item>
    
    <item>
      <title>Access The Report Platform</title>
      <link>//www.supernum.tech/en/installation/howtovisit/</link>
      <pubDate>Tue, 01 Jan 2019 11:02:05 +0600</pubDate>
      
      <guid>//www.supernum.tech/en/installation/howtovisit/</guid>
      <description>If you have completed the above steps, your report system has been built successfully in theory. Next, you may need to verify that the report platform is open properly or that your users can access the report platform.
Here you just need to query the IP address of the virtual machine and tell your users about it. Your user can open the browser in any device in the same LAN, and enter the IP address of the virtual machine in the browser&amp;rsquo;s address bar to access the report platform as if it were a normal website.</description>
    </item>
    
  </channel>
</rss>